/*
	PosteRazor - Make your own poster!
	Copyright (C) 2005 by Alessandro Portale
	http://posterazor.sourceforge.net/

	This file is part of PosteRazor

	PosteRazor is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.
	
	PosteRazor is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with PosteRazor; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/
// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "PosteRazorDialogUI.h"

void PosteRazorDialogUI::cb_m_nextButton_i(Fl_Button*, void*) {
  next();
}
void PosteRazorDialogUI::cb_m_nextButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()))->cb_m_nextButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_prevButton_i(Fl_Button*, void*) {
  prev();
}
void PosteRazorDialogUI::cb_m_prevButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()))->cb_m_prevButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_settingsButton_i(Fl_Button*, void*) {
  OpenSettingsDialog();
}
void PosteRazorDialogUI::cb_m_settingsButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()))->cb_m_settingsButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_imageLoadButton_i(Fl_Button*, void*) {
  LoadInputImage(0);
}
void PosteRazorDialogUI::cb_m_imageLoadButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_imageLoadButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperFormatTypeTabs_i(Fl_Tabs*, void*) {
  HandlePaperSizeChangement(m_paperFormatTypeTabs);
}
void PosteRazorDialogUI::cb_m_paperFormatTypeTabs(Fl_Tabs* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()))->cb_m_paperFormatTypeTabs_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperOrientationPortraitRadioButton_i(Fl_Round_Button*, void*) {
  HandlePaperSizeChangement(m_paperOrientationPortraitRadioButton);
}
void PosteRazorDialogUI::cb_m_paperOrientationPortraitRadioButton(Fl_Round_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()->parent()))->cb_m_paperOrientationPortraitRadioButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperOrientationLandscapeRadioButton_i(Fl_Round_Button*, void*) {
  HandlePaperSizeChangement(m_paperOrientationLandscapeRadioButton);
}
void PosteRazorDialogUI::cb_m_paperOrientationLandscapeRadioButton(Fl_Round_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()->parent()))->cb_m_paperOrientationLandscapeRadioButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperCustomWidthInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperCustomWidthInput);
}
void PosteRazorDialogUI::cb_m_paperCustomWidthInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_paperCustomWidthInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperCustomHeightInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperCustomHeightInput);
}
void PosteRazorDialogUI::cb_m_paperCustomHeightInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_paperCustomHeightInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperBorderTopInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperBorderTopInput);
}
void PosteRazorDialogUI::cb_m_paperBorderTopInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_paperBorderTopInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperBorderRightInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperBorderRightInput);
}
void PosteRazorDialogUI::cb_m_paperBorderRightInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_paperBorderRightInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperBorderBottomInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperBorderBottomInput);
}
void PosteRazorDialogUI::cb_m_paperBorderBottomInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_paperBorderBottomInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_paperBorderLeftInput_i(Fl_Value_Input*, void*) {
  HandlePaperSizeChangement(m_paperBorderLeftInput);
}
void PosteRazorDialogUI::cb_m_paperBorderLeftInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_paperBorderLeftInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_overlappingWidthInput_i(Fl_Value_Input*, void*) {
  HandleOverlappingChangement(m_overlappingWidthInput);
}
void PosteRazorDialogUI::cb_m_overlappingWidthInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingWidthInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_overlappingHeightInput_i(Fl_Value_Input*, void*) {
  HandleOverlappingChangement(m_overlappingHeightInput);
}
void PosteRazorDialogUI::cb_m_overlappingHeightInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingHeightInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_overlappingPositionTopLeftButton_i(Fl_Button*, void*) {
  HandleOverlappingChangement(m_overlappingPositionTopLeftButton);
}
void PosteRazorDialogUI::cb_m_overlappingPositionTopLeftButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingPositionTopLeftButton_i(o,v);
}

#include <FL/Fl_Image.H>
static unsigned char idata_overlappingTopLeft[] =
{132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132};
static Fl_RGB_Image image_overlappingTopLeft(idata_overlappingTopLeft, 24, 26, 3, 0);

void PosteRazorDialogUI::cb_m_overlappingPositionTopRightButton_i(Fl_Button*, void*) {
  HandleOverlappingChangement(m_overlappingPositionTopRightButton);
}
void PosteRazorDialogUI::cb_m_overlappingPositionTopRightButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingPositionTopRightButton_i(o,v);
}

static unsigned char idata_overlappingTopRight[] =
{132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132};
static Fl_RGB_Image image_overlappingTopRight(idata_overlappingTopRight, 24, 26, 3, 0);

void PosteRazorDialogUI::cb_m_overlappingPositionBottomLeftButton_i(Fl_Button*, void*) {
  HandleOverlappingChangement(m_overlappingPositionBottomLeftButton);
}
void PosteRazorDialogUI::cb_m_overlappingPositionBottomLeftButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingPositionBottomLeftButton_i(o,v);
}

static unsigned char idata_overlappingBottomLeft[] =
{132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132};
static Fl_RGB_Image image_overlappingBottomLeft(idata_overlappingBottomLeft, 24, 26, 3, 0);

void PosteRazorDialogUI::cb_m_overlappingPositionBottomRightButton_i(Fl_Button*, void*) {
  HandleOverlappingChangement(m_overlappingPositionBottomRightButton);
}
void PosteRazorDialogUI::cb_m_overlappingPositionBottomRightButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_overlappingPositionBottomRightButton_i(o,v);
}

static unsigned char idata_overlappingBottomRight[] =
{132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,228,228,230,228,
228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,228,230,228,228,230,
228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,230,228,228,
230,228,228,230,228,228,230,228,228,230,228,228,230,228,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,252,130,132,252,130,
132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,
130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,252,130,132,
252,130,132,252,130,132,252,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,
132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,
132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,130,132,132,
130,132,132,130,132,132,130,132,132,130,132,132,130,132};
static Fl_RGB_Image image_overlappingBottomRight(idata_overlappingBottomRight, 24, 26, 3, 0);

void PosteRazorDialogUI::cb_m_posterSizeAbsoluteRadioButton_i(Fl_Round_Button*, void*) {
  UpdatePosterSizeGroupsState();
}
void PosteRazorDialogUI::cb_m_posterSizeAbsoluteRadioButton(Fl_Round_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_posterSizeAbsoluteRadioButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterAbsoluteWidthInput_i(Fl_Value_Input*, void*) {
  UpdatePosterSizeFields(m_posterAbsoluteWidthInput);
}
void PosteRazorDialogUI::cb_m_posterAbsoluteWidthInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAbsoluteWidthInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterAbsoluteHeightInput_i(Fl_Value_Input*, void*) {
  UpdatePosterSizeFields(m_posterAbsoluteHeightInput);
}
void PosteRazorDialogUI::cb_m_posterAbsoluteHeightInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAbsoluteHeightInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterSizeInPagesRadioButton_i(Fl_Round_Button*, void*) {
  UpdatePosterSizeGroupsState();
}
void PosteRazorDialogUI::cb_m_posterSizeInPagesRadioButton(Fl_Round_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_posterSizeInPagesRadioButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterPagesWidthInput_i(Fl_Value_Input*, void*) {
  UpdatePosterSizeFields(m_posterPagesWidthInput);
}
void PosteRazorDialogUI::cb_m_posterPagesWidthInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterPagesWidthInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterPagesHeightInput_i(Fl_Value_Input*, void*) {
  UpdatePosterSizeFields(m_posterPagesHeightInput);
}
void PosteRazorDialogUI::cb_m_posterPagesHeightInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterPagesHeightInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterSizePercentualRadioButton_i(Fl_Round_Button*, void*) {
  UpdatePosterSizeGroupsState();
}
void PosteRazorDialogUI::cb_m_posterSizePercentualRadioButton(Fl_Round_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_posterSizePercentualRadioButton_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterPercentualSizeInput_i(Fl_Value_Input*, void*) {
  UpdatePosterSizeFields(m_posterPercentualSizeInput);
}
void PosteRazorDialogUI::cb_m_posterPercentualSizeInput(Fl_Value_Input* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterPercentualSizeInput_i(o,v);
}

void PosteRazorDialogUI::cb_m_posterAlignmentTopButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentTopButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentTopButton_i(o,v);
}

static unsigned char idata_alignmentTop[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,
255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,
0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,255,
128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,
0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,
255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,
255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,
0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,255,
128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,
0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,
0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,
128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,
128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentTop(idata_alignmentTop, 15, 19, 4, 0);

void PosteRazorDialogUI::cb_m_posterAlignmentMiddleButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentMiddleButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentMiddleButton_i(o,v);
}

static unsigned char idata_alignmentMiddle[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,
255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,
255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,
255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,
128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,0,0,0,
255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,
255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,
255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,
128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,
128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentMiddle(idata_alignmentMiddle, 15, 19, 4, 0);

void PosteRazorDialogUI::cb_m_posterAlignmentBottomButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentBottomButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentBottomButton_i(o,v);
}

static unsigned char idata_alignmentBottom[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,
255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,128,
128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,
128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,
128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,
0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,
255,128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,
128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,
128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,128,255,255,128,
128,255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,
0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentBottom(idata_alignmentBottom, 15, 19, 4, 0);

void PosteRazorDialogUI::cb_m_posterAlignmentLeftButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentLeftButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentLeftButton_i(o,v);
}

static unsigned char idata_alignmentLeft[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,
255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,255,255,128,
128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,255,255,128,
128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,255,255,128,
128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,255,255,128,
128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,
128,128,255,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentLeft(idata_alignmentLeft, 19, 15, 4, 0);

void PosteRazorDialogUI::cb_m_posterAlignmentCenterButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentCenterButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentCenterButton_i(o,v);
}

static unsigned char idata_alignmentCenter[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,
255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,
128,128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentCenter(idata_alignmentCenter, 19, 15, 4, 0);

void PosteRazorDialogUI::cb_m_posterAlignmentRightButton_i(Fl_Button*, void*) {
  HandlePosterImageAlignment();
}
void PosteRazorDialogUI::cb_m_posterAlignmentRightButton(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()->parent()))->cb_m_posterAlignmentRightButton_i(o,v);
}

static unsigned char idata_alignmentRight[] =
{128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,
128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,
255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,128,128,255,255,128,128,255,255,128,128,
255,0,0,0,255,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
128,128,255,255,128,128,255,255,128,128,255,0,0,0,255,0,0,0,0,128,128,128,255,
128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255,
128,128,128,255,128,128,128,255};
static Fl_RGB_Image image_alignmentRight(idata_alignmentRight, 19, 15, 4, 0);

void PosteRazorDialogUI::cb_14filesave_i(Fl_Button*, void*) {
  SavePoster();
}
void PosteRazorDialogUI::cb_14filesave(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_14filesave_i(o,v);
}

void PosteRazorDialogUI::cb_m_setLaunchPDFApplicationCheckButton_i(Fl_Check_Button*, void*) {
  SetLaunchPDFApplication();
}
void PosteRazorDialogUI::cb_m_setLaunchPDFApplicationCheckButton(Fl_Check_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()->parent()->parent()))->cb_m_setLaunchPDFApplicationCheckButton_i(o,v);
}

void PosteRazorDialogUI::cb__i(Fl_Button*, void*) {
  OpenHelpDialog();
}
void PosteRazorDialogUI::cb_(Fl_Button* o, void* v) {
  ((PosteRazorDialogUI*)(o->parent()->parent()))->cb__i(o,v);
}
PosteRazorDialogUI::PosteRazorDialogUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _PosteRazorDialogUI();
}

PosteRazorDialogUI::PosteRazorDialogUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _PosteRazorDialogUI();
}

void PosteRazorDialogUI::_PosteRazorDialogUI() {
  PosteRazorDialogUI *w = this;
  PosteRazorDialogUI *o = this;
o->box(FL_FLAT_BOX);
o->color(FL_BACKGROUND_COLOR);
o->selection_color(FL_BACKGROUND_COLOR);
o->labeltype(FL_NORMAL_LABEL);
o->labelfont(0);
o->labelsize(14);
o->labelcolor(FL_FOREGROUND_COLOR);
o->user_data((void*)(this));
o->align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE);
o->when(FL_WHEN_RELEASE);
{ Fl_Group* o = new Fl_Group(10, 420, 600, 25);
  { Fl_Box* o = new Fl_Box(295, 420, 15, 25);
    Fl_Group::current()->resizable(o);
  }
  { Fl_Button* o = m_nextButton = new Fl_Button(515, 420, 95, 25, "Next @-2->");
    o->labelcolor(FL_GRAY0);
    o->callback((Fl_Callback*)cb_m_nextButton);
  }
  { Fl_Button* o = m_prevButton = new Fl_Button(410, 420, 95, 25, "@-2<- Back");
    o->labelcolor(FL_GRAY0);
    o->callback((Fl_Callback*)cb_m_prevButton);
  }
  { Fl_Button* o = m_settingsButton = new Fl_Button(10, 420, 135, 25, "Settings...");
    o->labelcolor(FL_GRAY0);
    o->callback((Fl_Callback*)cb_m_settingsButton);
  }
  o->end();
}
{ Fl_Wizard* o = m_wizard = new Fl_Wizard(315, 45, 295, 365);
  o->box(FL_THIN_DOWN_BOX);
  o->user_data((void*)(this));
  { Fl_Group* o = m_loadInputImageStep = new Fl_Group(315, 45, 295, 365);
    o->color(FL_LIGHT1);
    o->hide();
    { Fl_Group* o = m_imageLoadGroup = new Fl_Group(325, 69, 275, 25, "Input Image");
      { Fl_Button* o = m_imageLoadButton = new Fl_Button(575, 69, 25, 25, "@+1fileopen");
        o->labelcolor((Fl_Color)134);
        o->callback((Fl_Callback*)cb_m_imageLoadButton);
      }
      { Fl_Box* o = m_inputFileNameLabel = new Fl_Box(325, 69, 250, 25);
        o->box(FL_THIN_DOWN_BOX);
        o->color((Fl_Color)55);
        o->align(68|FL_ALIGN_INSIDE);
        Fl_Group::current()->resizable(o);
      }
      o->end();
    }
    { Fl_Group* o = m_imageInfoGroup = new Fl_Group(325, 120, 275, 85, "Image information");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      { Fl_Box* o = m_imageInfoValuesLabel = new Fl_Box(460, 130, 135, 65);
        o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      }
      { Fl_Box* o = m_imageInfoKeysLabel = new Fl_Box(335, 130, 125, 65);
        o->align(FL_ALIGN_TOP_RIGHT|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(315, 410, 295, 0);
      Fl_Group::current()->resizable(o);
    }
    o->end();
  }
  { Fl_Group* o = m_paperSizeStep = new Fl_Group(315, 45, 295, 365);
    o->hide();
    { Fl_Tabs* o = m_paperFormatTypeTabs = new Fl_Tabs(325, 70, 275, 140, "Paper size");
      o->callback((Fl_Callback*)cb_m_paperFormatTypeTabs);
      { Fl_Group* o = m_paperFormatStandardGroup = new Fl_Group(325, 95, 275, 115, "Standard");
        o->box(FL_THIN_UP_BOX);
        o->selection_color((Fl_Color)40);
        o->hide();
        { Fl_Choice* o = m_paperFormatChoice = new Fl_Choice(425, 105, 165, 25, "Format:");
          o->down_box(FL_BORDER_BOX);
        }
        { Fl_Group* o = m_paperOrientationGroup = new Fl_Group(425, 140, 165, 60, "Orientation:");
          o->box(FL_THIN_DOWN_BOX);
          o->color((Fl_Color)43);
          o->align(FL_ALIGN_LEFT);
          { Fl_Round_Button* o = m_paperOrientationPortraitRadioButton = new Fl_Round_Button(460, 145, 125, 25, "Portrait");
            o->type(102);
            o->down_box(FL_ROUND_DOWN_BOX);
            o->callback((Fl_Callback*)cb_m_paperOrientationPortraitRadioButton);
          }
          { Fl_Round_Button* o = m_paperOrientationLandscapeRadioButton = new Fl_Round_Button(460, 170, 125, 25, "Landscape");
            o->type(102);
            o->down_box(FL_ROUND_DOWN_BOX);
            o->callback((Fl_Callback*)cb_m_paperOrientationLandscapeRadioButton);
          }
          o->end();
        }
        o->end();
      }
      { Fl_Group* o = m_paperFormatCustomGroup = new Fl_Group(325, 95, 275, 115, "Custom");
        o->box(FL_THIN_UP_BOX);
        o->selection_color((Fl_Color)40);
        { Fl_Value_Input* o = m_paperCustomWidthInput = new Fl_Value_Input(425, 122, 95, 25, "Width:");
          o->maximum(9999);
          o->step(0.1);
          o->callback((Fl_Callback*)cb_m_paperCustomWidthInput);
          o->precision(2);
        }
        { Fl_Value_Input* o = m_paperCustomHeightInput = new Fl_Value_Input(425, 157, 95, 25, "Height:");
          o->maximum(9999);
          o->step(0.1);
          o->callback((Fl_Callback*)cb_m_paperCustomHeightInput);
          Fl_Group::current()->resizable(o);
          o->precision(2);
        }
        { Fl_Box* o = m_paperCustomWidthDimensionUnitLabel = new Fl_Box(520, 122, 75, 25, "cm");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        { Fl_Box* o = m_paperCustomHeightDimensionUnitLabel = new Fl_Box(520, 157, 75, 25, "cm");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        o->end();
      }
      o->end();
    }
    { Fl_Group* o = m_paperBordersGroup = new Fl_Group(325, 235, 275, 135, "Borders (cm)");
      o->box(FL_THIN_DOWN_BOX);
      o->color((Fl_Color)43);
      { Fl_Value_Input* o = m_paperBorderTopInput = new Fl_Value_Input(430, 260, 60, 25, "Top");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_paperBorderTopInput);
        o->align(FL_ALIGN_TOP);
        o->precision(2);
      }
      { Fl_Value_Input* o = m_paperBorderRightInput = new Fl_Value_Input(490, 290, 60, 25, "Right");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_paperBorderRightInput);
        o->align(FL_ALIGN_TOP_RIGHT);
        o->precision(2);
      }
      { Fl_Value_Input* o = m_paperBorderBottomInput = new Fl_Value_Input(430, 320, 60, 25, "Bottom");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_paperBorderBottomInput);
        o->align(FL_ALIGN_BOTTOM);
        o->precision(2);
      }
      { Fl_Value_Input* o = m_paperBorderLeftInput = new Fl_Value_Input(370, 290, 60, 25, "Left");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_paperBorderLeftInput);
        o->align(FL_ALIGN_TOP_LEFT);
        o->precision(2);
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(315, 400, 295, 10);
      Fl_Group::current()->resizable(o);
    }
    o->end();
  }
  { Fl_Group* o = m_overlappingStep = new Fl_Group(315, 45, 295, 365);
    o->hide();
    { Fl_Group* o = m_overlappingSizeGroup = new Fl_Group(325, 70, 275, 75, "Overlapping size");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      o->selection_color(FL_LIGHT3);
      { Fl_Value_Input* o = m_overlappingWidthInput = new Fl_Value_Input(430, 80, 90, 25, "Width:");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_overlappingWidthInput);
        o->precision(2);
      }
      { Fl_Value_Input* o = m_overlappingHeightInput = new Fl_Value_Input(430, 110, 90, 25, "Height:");
        o->maximum(9999);
        o->step(0.1);
        o->callback((Fl_Callback*)cb_m_overlappingHeightInput);
        Fl_Group::current()->resizable(o);
        o->precision(2);
      }
      { Fl_Box* o = m_overlappingWidthDimensionUnitLabel = new Fl_Box(520, 80, 75, 25, "cm");
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      { Fl_Box* o = m_overlappingHeightDimensionUnitLabel = new Fl_Box(520, 110, 75, 25, "cm");
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(315, 410, 290, 0);
      Fl_Group::current()->resizable(o);
    }
    { Fl_Group* o = m_overlappingPositionGroup = new Fl_Group(325, 170, 275, 190, "Overlapping position");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      o->selection_color(FL_LIGHT3);
      { Fl_Button* o = m_overlappingPositionTopLeftButton = new Fl_Button(335, 180, 120, 80, "Top left");
        o->type(102);
        o->color((Fl_Color)40);
        o->selection_color((Fl_Color)55);
        o->image(image_overlappingTopLeft);
        o->callback((Fl_Callback*)cb_m_overlappingPositionTopLeftButton);
      }
      { Fl_Button* o = m_overlappingPositionTopRightButton = new Fl_Button(470, 180, 120, 80, "Top right");
        o->type(102);
        o->color((Fl_Color)40);
        o->selection_color((Fl_Color)55);
        o->image(image_overlappingTopRight);
        o->callback((Fl_Callback*)cb_m_overlappingPositionTopRightButton);
      }
      { Fl_Button* o = m_overlappingPositionBottomLeftButton = new Fl_Button(335, 270, 120, 80, "Bottom left");
        o->type(102);
        o->color((Fl_Color)40);
        o->selection_color((Fl_Color)55);
        o->image(image_overlappingBottomLeft);
        o->callback((Fl_Callback*)cb_m_overlappingPositionBottomLeftButton);
      }
      { Fl_Button* o = m_overlappingPositionBottomRightButton = new Fl_Button(470, 270, 120, 80, "Bottom right");
        o->type(102);
        o->color((Fl_Color)40);
        o->selection_color((Fl_Color)55);
        o->image(image_overlappingBottomRight);
        o->callback((Fl_Callback*)cb_m_overlappingPositionBottomRightButton);
      }
      o->end();
    }
    o->end();
  }
  { Fl_Group* o = m_posterSizeStep = new Fl_Group(315, 45, 295, 365);
    o->hide();
    { Fl_Group* o = m_posterSizeGroup = new Fl_Group(325, 70, 275, 250, "Image size");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      o->selection_color(FL_LIGHT3);
      { Fl_Round_Button* o = m_posterSizeAbsoluteRadioButton = new Fl_Round_Button(335, 80, 260, 20, "Absolute image size");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)cb_m_posterSizeAbsoluteRadioButton);
      }
      { Fl_Group* o = m_posterSizeAbsoluteGroup = new Fl_Group(335, 105, 260, 55);
        { Fl_Value_Input* o = m_posterAbsoluteWidthInput = new Fl_Value_Input(430, 105, 90, 25, "Width:");
          o->maximum(9999);
          o->step(1);
          o->callback((Fl_Callback*)cb_m_posterAbsoluteWidthInput);
          o->precision(3);
        }
        { Fl_Box* o = m_posterAbsoluteWidthDimensionUnitLabel = new Fl_Box(520, 105, 70, 25, "cm");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        { Fl_Value_Input* o = m_posterAbsoluteHeightInput = new Fl_Value_Input(430, 135, 90, 25, "Height:");
          o->maximum(9999);
          o->step(1);
          o->callback((Fl_Callback*)cb_m_posterAbsoluteHeightInput);
          o->precision(3);
        }
        { Fl_Box* o = m_posterAbsoluteHeightDimensionUnitLabel = new Fl_Box(520, 135, 70, 25, "cm");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        o->end();
      }
      { Fl_Round_Button* o = m_posterSizeInPagesRadioButton = new Fl_Round_Button(335, 170, 260, 20, "Size in pages");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)cb_m_posterSizeInPagesRadioButton);
      }
      { Fl_Group* o = m_posterSizeInPagesGroup = new Fl_Group(335, 195, 260, 55);
        { Fl_Value_Input* o = m_posterPagesWidthInput = new Fl_Value_Input(430, 195, 90, 25, "Width:");
          o->maximum(9999);
          o->step(0.01);
          o->callback((Fl_Callback*)cb_m_posterPagesWidthInput);
          o->precision(3);
        }
        { Fl_Box* o = m_posterPagesWidthLabel = new Fl_Box(520, 195, 70, 25, "pages");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        { Fl_Value_Input* o = m_posterPagesHeightInput = new Fl_Value_Input(430, 225, 90, 25, "Height:");
          o->maximum(9999);
          o->step(0.01);
          o->callback((Fl_Callback*)cb_m_posterPagesHeightInput);
          o->precision(3);
        }
        { Fl_Box* o = m_posterPagesHeightLabel = new Fl_Box(520, 225, 70, 25, "pages");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        o->end();
      }
      { Fl_Round_Button* o = m_posterSizePercentualRadioButton = new Fl_Round_Button(335, 260, 260, 20, "Image size in percent");
        o->type(102);
        o->down_box(FL_ROUND_DOWN_BOX);
        o->callback((Fl_Callback*)cb_m_posterSizePercentualRadioButton);
      }
      { Fl_Group* o = m_posterSizePercentualGroup = new Fl_Group(335, 285, 260, 25);
        { Fl_Value_Input* o = m_posterPercentualSizeInput = new Fl_Value_Input(430, 285, 90, 25, "Size:");
          o->maximum(9999);
          o->step(0.1);
          o->callback((Fl_Callback*)cb_m_posterPercentualSizeInput);
          o->precision(3);
        }
        { Fl_Box* o = m_posterPercentualWidthLabel = new Fl_Box(520, 285, 70, 25, "%");
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        o->end();
      }
      o->end();
    }
    { Fl_Group* o = m_imageAlignmentGroup = new Fl_Group(325, 345, 275, 51, "Image alignment");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      o->selection_color(FL_DARK2);
      { Fl_Group* o = new Fl_Group(335, 355, 113, 31);
        { Fl_Button* o = m_posterAlignmentTopButton = new Fl_Button(335, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentTop);
          o->callback((Fl_Callback*)cb_m_posterAlignmentTopButton);
        }
        { Fl_Button* o = m_posterAlignmentMiddleButton = new Fl_Button(376, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentMiddle);
          o->callback((Fl_Callback*)cb_m_posterAlignmentMiddleButton);
        }
        { Fl_Button* o = m_posterAlignmentBottomButton = new Fl_Button(417, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentBottom);
          o->callback((Fl_Callback*)cb_m_posterAlignmentBottomButton);
        }
        o->end();
      }
      { Fl_Group* o = new Fl_Group(477, 355, 113, 31);
        { Fl_Button* o = m_posterAlignmentLeftButton = new Fl_Button(477, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentLeft);
          o->callback((Fl_Callback*)cb_m_posterAlignmentLeftButton);
        }
        { Fl_Button* o = m_posterAlignmentCenterButton = new Fl_Button(518, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentCenter);
          o->callback((Fl_Callback*)cb_m_posterAlignmentCenterButton);
        }
        { Fl_Button* o = m_posterAlignmentRightButton = new Fl_Button(559, 355, 31, 31);
          o->type(102);
          o->color((Fl_Color)40);
          o->selection_color((Fl_Color)55);
          o->image(image_alignmentRight);
          o->callback((Fl_Callback*)cb_m_posterAlignmentRightButton);
        }
        o->end();
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(315, 410, 295, 0);
      Fl_Group::current()->resizable(o);
    }
    o->end();
  }
  { Fl_Group* o = m_savePosterStep = new Fl_Group(315, 45, 295, 365);
    { Fl_Group* o = m_savePosterGroup = new Fl_Group(325, 70, 275, 85, "Save the Poster");
      o->box(FL_THIN_DOWN_BOX);
      o->color(FL_DARK2);
      { Fl_Button* o = new Fl_Button(335, 80, 255, 25, "@+14filesave");
        o->labelcolor((Fl_Color)42);
        o->callback((Fl_Callback*)cb_14filesave);
      }
      { Fl_Check_Button* o = m_setLaunchPDFApplicationCheckButton = new Fl_Check_Button(335, 115, 255, 30, "Launch PDF application after saving");
        o->down_box(FL_DOWN_BOX);
        o->callback((Fl_Callback*)cb_m_setLaunchPDFApplicationCheckButton);
        o->align(132|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Box* o = new Fl_Box(315, 410, 295, 0);
      Fl_Group::current()->resizable(o);
    }
    o->end();
  }
  o->end();
}
{ Fl_Paint_Canvas_Group* o = m_paintCanvasGroup = new Fl_Paint_Canvas_Group(10, 45, 300, 365);
  o->box(FL_FLAT_BOX);
  o->color(FL_DARK2);
  o->selection_color(FL_BACKGROUND_COLOR);
  o->labeltype(FL_NORMAL_LABEL);
  o->labelfont(0);
  o->labelsize(14);
  o->labelcolor((Fl_Color)30);
  o->align(FL_ALIGN_TOP);
  o->when(FL_WHEN_RELEASE);
  o->end();
  Fl_Group::current()->resizable(o);
}
{ Fl_Group* o = new Fl_Group(10, 10, 600, 25);
  { Fl_Box* o = m_stepInfoBox = new Fl_Box(10, 10, 570, 25, "Step 1 of 8: Load an image");
    o->box(FL_THIN_UP_BOX);
    o->color((Fl_Color)10);
    o->labelfont(1);
    o->labelsize(15);
    o->labelcolor(FL_GRAY0);
    o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    Fl_Group::current()->resizable(o);
  }
  { Fl_Button* o = new Fl_Button(585, 10, 25, 25, "?");
    o->color((Fl_Color)10);
    o->labelfont(1);
    o->labelsize(15);
    o->labelcolor(FL_GRAY0);
    o->callback((Fl_Callback*)cb_);
  }
  o->end();
}
// ****** Load input image step:
// ****** Paper size step:
// ****** Overlapping step:
// ****** Poster size step:
// ****** Save poster step:
size_range(this->w(), this->h());
end();
}

void PosteRazorHelpDialogUI::cb_OK_i(Fl_Return_Button*, void*) {
  hide();
}
void PosteRazorHelpDialogUI::cb_OK(Fl_Return_Button* o, void* v) {
  ((PosteRazorHelpDialogUI*)(o->parent()->parent()))->cb_OK_i(o,v);
}

void PosteRazorHelpDialogUI::cb_m_homepageButton_i(Fl_Button*, void*) {
  HandleHomepageButtonClick();
}
void PosteRazorHelpDialogUI::cb_m_homepageButton(Fl_Button* o, void* v) {
  ((PosteRazorHelpDialogUI*)(o->parent()->parent()))->cb_m_homepageButton_i(o,v);
}
PosteRazorHelpDialogUI::PosteRazorHelpDialogUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _PosteRazorHelpDialogUI();
}

PosteRazorHelpDialogUI::PosteRazorHelpDialogUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _PosteRazorHelpDialogUI();
}

void PosteRazorHelpDialogUI::_PosteRazorHelpDialogUI() {
  PosteRazorHelpDialogUI *w = this;
  PosteRazorHelpDialogUI *o = this;
o->box(FL_FLAT_BOX);
o->color(FL_BACKGROUND_COLOR);
o->selection_color(FL_BACKGROUND_COLOR);
o->labeltype(FL_NORMAL_LABEL);
o->labelfont(0);
o->labelsize(14);
o->labelcolor(FL_FOREGROUND_COLOR);
o->user_data((void*)(this));
o->align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE);
o->when(FL_WHEN_RELEASE);
{ Fl_Help_View* o = m_help_view = new Fl_Help_View(10, 10, 480, 345);
  o->labelsize(8);
  Fl_Group::current()->resizable(o);
  o->textsize(14);
  o->textfont(FL_HELVETICA);
}
{ Fl_Group* o = new Fl_Group(10, 365, 480, 25);
  { Fl_Return_Button* o = new Fl_Return_Button(405, 365, 85, 25, "OK");
    o->callback((Fl_Callback*)cb_OK);
  }
  { Fl_Button* o = m_homepageButton = new Fl_Button(10, 365, 185, 25, "Homepage");
    o->callback((Fl_Callback*)cb_m_homepageButton);
  }
  { Fl_Box* o = new Fl_Box(333, 365, 10, 25);
    o->labelsize(8);
    Fl_Group::current()->resizable(o);
  }
  o->end();
}
size_range(300, 150);
end();
}

void PosteRazorHelpDialogUI::SetHomepageButtonLabel(const char *label) {
  m_homepageButton->label(label);
}

void PosteRazorSettingsDialogUI::cb_m_useOpenGLCheckButton_i(Fl_Check_Button*, void*) {
  HandleUseOpenGLChangement();
}
void PosteRazorSettingsDialogUI::cb_m_useOpenGLCheckButton(Fl_Check_Button* o, void* v) {
  ((PosteRazorSettingsDialogUI*)(o->parent()->parent()->parent()))->cb_m_useOpenGLCheckButton_i(o,v);
}

void PosteRazorSettingsDialogUI::cb_OK1_i(Fl_Return_Button*, void*) {
  m_okWasPressed = true;
hide();
}
void PosteRazorSettingsDialogUI::cb_OK1(Fl_Return_Button* o, void* v) {
  ((PosteRazorSettingsDialogUI*)(o->parent()->parent()))->cb_OK1_i(o,v);
}

void PosteRazorSettingsDialogUI::cb_m_cancelButton_i(Fl_Button*, void*) {
  hide();
}
void PosteRazorSettingsDialogUI::cb_m_cancelButton(Fl_Button* o, void* v) {
  ((PosteRazorSettingsDialogUI*)(o->parent()->parent()))->cb_m_cancelButton_i(o,v);
}
PosteRazorSettingsDialogUI::PosteRazorSettingsDialogUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _PosteRazorSettingsDialogUI();
}

PosteRazorSettingsDialogUI::PosteRazorSettingsDialogUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _PosteRazorSettingsDialogUI();
}

void PosteRazorSettingsDialogUI::_PosteRazorSettingsDialogUI() {
  PosteRazorSettingsDialogUI *w = this;
  PosteRazorSettingsDialogUI *o = this;
o->box(FL_FLAT_BOX);
o->color(FL_BACKGROUND_COLOR);
o->selection_color(FL_BACKGROUND_COLOR);
o->labeltype(FL_NORMAL_LABEL);
o->labelfont(0);
o->labelsize(14);
o->labelcolor(FL_FOREGROUND_COLOR);
o->user_data((void*)(this));
o->align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE);
o->when(FL_WHEN_RELEASE);
{ Fl_Group* o = new Fl_Group(10, 10, 295, 345);
  o->box(FL_THIN_DOWN_BOX);
  o->labelsize(8);
  { Fl_Group* o = m_unitOfLengthGroup = new Fl_Group(20, 35, 275, 85, "Units");
    o->box(FL_THIN_DOWN_BOX);
    o->color(FL_DARK2);
    { Fl_Group* o = m_unitOfLengthButtonsGroup = new Fl_Group(30, 45, 255, 25);
      o->end();
    }
    { Fl_Box* o = m_unitOfLengthExplanationBox = new Fl_Box(30, 80, 255, 30, "Choose the distance unit you want to work with");
      o->align(134|FL_ALIGN_INSIDE);
    }
    o->end();
  }
  { Fl_Group* o = m_useOpenGLGroup = new Fl_Group(20, 145, 275, 105, "Preview with OpenGL");
    o->box(FL_THIN_DOWN_BOX);
    o->color(FL_DARK2);
    { Fl_Check_Button* o = m_useOpenGLCheckButton = new Fl_Check_Button(30, 154, 255, 20, "use OpenGL");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)cb_m_useOpenGLCheckButton);
    }
    { Fl_Box* o = m_useOpenGLExplanationBox = new Fl_Box(30, 179, 255, 60, "OpenGL enables a smooth preview on modern systems. It could slow the preview \
down on old systems, though.");
      o->align(134|FL_ALIGN_INSIDE);
    }
    o->end();
  }
  { Fl_Group* o = m_languageGroup = new Fl_Group(20, 275, 275, 70, "Language");
    o->box(FL_THIN_DOWN_BOX);
    o->color(FL_DARK2);
    { Fl_Group* o = m_languageButtonsGroup = new Fl_Group(30, 285, 255, 25);
      o->end();
    }
    { Fl_Box* o = m_languageExplanationBox = new Fl_Box(30, 315, 255, 20, "Choose your language");
      o->align(134|FL_ALIGN_INSIDE);
    }
    o->end();
  }
  o->end();
}
{ Fl_Group* o = new Fl_Group(10, 365, 296, 25);
  { Fl_Return_Button* o = new Fl_Return_Button(210, 365, 95, 25, "OK");
    o->callback((Fl_Callback*)cb_OK1);
  }
  { Fl_Button* o = m_cancelButton = new Fl_Button(105, 365, 95, 25, "Cancel");
    o->callback((Fl_Callback*)cb_m_cancelButton);
  }
  { Fl_Box* o = new Fl_Box(10, 365, 10, 25);
    o->labelsize(8);
    Fl_Group::current()->resizable(o);
  }
  o->end();
}
m_okWasPressed = false;
set_modal();
end();
}
