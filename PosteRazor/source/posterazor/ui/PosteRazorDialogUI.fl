# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
decl {\#include "Fl_Paint_Canvas.h"} {public
} 

widget_class PosteRazorDialogUI {
  user_data this open
  xywh {570 213 620 455} type Double resizable
  code0 {size_range(this->w(), this->h());}
  class Fl_Double_Window visible
} {
  Fl_Group {} {
    xywh {10 420 600 25}
  } {
    Fl_Button m_nextButton {
      label {Next @-2->}
      callback {next();}
      xywh {525 420 85 25}
    }
    Fl_Button m_prevButton {
      label {@-2<- Back}
      callback {prev();}
      xywh {430 420 85 25}
    }
    Fl_Box {} {
      xywh {225 420 15 25} resizable
    }
  }
  Fl_Wizard m_wizard {
    user_data this open
    xywh {315 45 295 365} box THIN_DOWN_BOX
  } {
    Fl_Group m_loadInputImageStep {open
      xywh {315 45 295 365} color 50 hide
    } {
      Fl_Group {} {
        label {Input Image}
        xywh {325 70 275 25}
      } {
        Fl_Button {} {
          label {...}
          callback {LoadInputImage();}
          xywh {575 70 25 25}
        }
        Fl_Box m_inputFileNameLabel {
          xywh {325 70 250 25} box THIN_DOWN_BOX color 55 align 84 resizable
        }
      }
      Fl_Group m_imageInfoGroup {
        label {Image information}
        xywh {325 120 275 85} box THIN_DOWN_BOX color 45
      } {
        Fl_Box m_imageInfoValuesLabel {
          xywh {460 130 135 65} align 21
        }
        Fl_Box m_imageInfoKeysLabel {
          xywh {335 130 125 65} align 25
        }
      }
      Fl_Box {} {
        xywh {315 410 295 0} resizable
      }
    }
    Fl_Group m_paperSizeStep {open
      xywh {315 45 295 365} hide
    } {
      Fl_Tabs m_paperFormatTypeTabs {
        callback {HandlePaperSizeChangement(m_paperFormatTypeTabs);} open
        xywh {325 55 275 140} align 0
      } {
        Fl_Group m_paperFormatStandardGroup {
          label Standard
          xywh {325 80 275 115} box THIN_UP_BOX selection_color 40 hide
        } {
          Fl_Choice m_paperFormatChoice {
            label {Format:} open
            xywh {425 90 165 25} down_box BORDER_BOX
          } {}
          Fl_Group {} {
            label {Orientation:} open
            xywh {425 125 165 60} box THIN_DOWN_BOX color 43 align 4
          } {
            Fl_Round_Button m_paperOrientationPortraitRadioButton {
              label Portrait
              callback {HandlePaperSizeChangement(m_paperOrientationPortraitRadioButton);}
              xywh {460 130 125 25} type Radio down_box ROUND_DOWN_BOX
            }
            Fl_Round_Button m_paperOrientationLandscapeRadioButton {
              label Landscape
              callback {HandlePaperSizeChangement(m_paperOrientationLandscapeRadioButton);}
              xywh {460 155 125 25} type Radio down_box ROUND_DOWN_BOX
            }
          }
        }
        Fl_Group m_paperFormatCustomGroup {
          label Custom open
          xywh {325 80 275 115} box THIN_UP_BOX selection_color 40
        } {
          Fl_Value_Input m_paperCustomWidthInput {
            label {Width:}
            callback {HandlePaperSizeChangement(m_paperCustomWidthInput);}
            xywh {425 107 95 25} maximum 999 step 0.1
            code0 {o->precision(2);}
          }
          Fl_Value_Input m_paperCustomHeightInput {
            label {Height:}
            callback {HandlePaperSizeChangement(m_paperCustomHeightInput);}
            xywh {425 142 95 25} maximum 999 step 0.1 resizable
            code0 {o->step(0.1);}
            code1 {o->range(0, 999);}
            code2 {o->precision(2);}
          }
          Fl_Box m_paperCustomWidthLabel {
            label cm
            xywh {520 107 50 25} align 20
          }
          Fl_Box m_paperCustomHeightLabel {
            label cm
            xywh {520 142 50 25} align 20
          }
        }
      }
      Fl_Box {} {
        xywh {315 400 295 10} resizable
      }
      Fl_Group {} {
        label {Borders:} open
        xywh {325 220 275 135} box THIN_DOWN_BOX color 43
      } {
        Fl_Value_Input m_paperBorderTopInput {
          label Top
          callback {HandlePaperSizeChangement(m_paperBorderTopInput);}
          xywh {430 245 60 25} align 1 maximum 999 step 0.1
          code0 {o->precision(2);}
        }
        Fl_Value_Input m_paperBorderRightInput {
          label Right
          callback {HandlePaperSizeChangement(m_paperBorderRightInput);}
          xywh {490 275 60 25} align 9 maximum 999 step 0.1
          code0 {o->precision(2);}
        }
        Fl_Value_Input m_paperBorderBottomInput {
          label Bottom
          callback {HandlePaperSizeChangement(m_paperBorderBottomInput);}
          xywh {430 305 60 25} align 2 maximum 999 step 0.1
          code0 {o->precision(2);}
        }
        Fl_Value_Input m_paperBorderLeftInput {
          label Left
          callback {HandlePaperSizeChangement(m_paperBorderLeftInput);}
          xywh {370 275 60 25} align 5 maximum 999 step 0.1
          code0 {o->precision(2);}
        }
      }
    }
    Fl_Group m_overlappingStep {open
      xywh {315 45 295 365}
    } {
      Fl_Group {} {
        label {Overlapping size} open
        xywh {325 70 275 80} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Value_Input m_overlappingWidthInput {
          label {Width:}
          callback {HandleOverlappingChangement(m_overlappingWidthInput);}
          xywh {430 80 90 25} maximum 999 step 0.1
          code0 {o->precision(2);}
        }
        Fl_Value_Input m_overlappingHeightInput {
          label {Height:}
          callback {HandleOverlappingChangement(m_overlappingHeightInput);}
          xywh {430 115 90 25} maximum 999 step 0.1 resizable
          code0 {o->precision(2);}
        }
        Fl_Box m_overlappingWidthLabel {
          label cm
          xywh {520 80 70 25} align 20
        }
        Fl_Box m_overlappingHeightLabel {
          label cm
          xywh {520 115 70 25} align 20
        }
      }
      Fl_Box {} {
        xywh {315 410 290 0} resizable
      }
      Fl_Group {} {
        label {Overlapping position} open
        xywh {325 175 275 170} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Round_Button m_overlappingTopRightRadioButton {
          callback {HandleOverlappingChangement(m_overlappingTopRightRadioButton);} selected
          xywh {465 180 130 80} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Box m_overlappingTopRightBox {
          label {Top right}
          image {images/overlappingTopRight.png} xywh {485 185 105 70} box THIN_DOWN_BOX color 41 align 128
        }
        Fl_Round_Button m_overlappingBottomRightRadioButton {
          callback {HandleOverlappingChangement(m_overlappingBottomRightRadioButton);}
          xywh {465 260 130 80} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Box m_overlappingBottomRightBox {
          label {Bottom right}
          image {images/overlappingBottomRight.png} xywh {485 265 105 70} box THIN_DOWN_BOX color 42 align 128
        }
        Fl_Round_Button m_overlappingTopLeftRadioButton {
          callback {HandleOverlappingChangement(m_overlappingTopLeftRadioButton);}
          xywh {330 180 130 80} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Box m_overlappingTopLeftBox {
          label {Top left}
          image {images/overlappingTopLeft.png} xywh {350 185 105 70} box THIN_DOWN_BOX color 41 align 128
        }
        Fl_Round_Button m_overlappingBottomLeftRadioButton {
          callback {HandleOverlappingChangement(m_overlappingBottomLeftRadioButton);}
          xywh {330 260 130 80} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Box m_overlappingBottomLeftBox {
          label {Bottom left}
          image {images/overlappingBottomLeft.png} xywh {350 265 105 70} box THIN_DOWN_BOX color 42 align 128
        }
      }
    }
    Fl_Group m_posterSizeStep {
      xywh {315 45 295 365} hide
    } {
      Fl_Round_Button m_posterSizeAbsoluteRadioButton {
        label {Absolute image size}
        callback {UpdatePosterSizeGroupsState();}
        xywh {325 52 275 20} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Group m_posterSizeAbsoluteGroup {open
        xywh {325 70 275 75} box THIN_DOWN_BOX color 45 selection_color 54 align 0
      } {
        Fl_Value_Input m_posterAbsoluteWidthInput {
          label {Width:}
          callback {UpdatePosterSizeFields(m_posterAbsoluteWidthInput);}
          xywh {430 80 90 25}
          code0 {o->step(1);}
          code1 {o->range(0, 999);}
          code2 {o->precision(3);}
        }
        Fl_Value_Input m_posterAbsoluteHeightInput {
          label {Height:}
          callback {UpdatePosterSizeFields(m_posterAbsoluteHeightInput);}
          xywh {430 110 90 25} resizable
          code0 {o->step(1);}
          code1 {o->range(0, 999);}
          code2 {o->precision(3);}
        }
        Fl_Box m_posterAbsoluteWidthLabel {
          label cm
          xywh {520 80 70 25} align 20
        }
        Fl_Box m_posterAbsoluteHeightLabel {
          label cm
          xywh {520 110 70 25} align 20
        }
      }
      Fl_Round_Button m_posterSizeInPagesRadioButton {
        label {Size in pages}
        callback {UpdatePosterSizeGroupsState();}
        xywh {325 152 275 20} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Group m_posterSizeInPagesGroup {open
        xywh {325 170 275 75} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Value_Input m_posterPagesWidthInput {
          label {Width:}
          callback {UpdatePosterSizeFields(m_posterPagesWidthInput);}
          xywh {430 180 90 25}
          code0 {o->step(0.1);}
          code1 {o->range(0, 999);}
          code2 {o->precision(3);}
        }
        Fl_Value_Input m_posterPagesHeightInput {
          label {Height:}
          callback {UpdatePosterSizeFields(m_posterPagesHeightInput);}
          xywh {430 210 90 25} resizable
          code0 {o->step(0.1);}
          code1 {o->range(0, 999);}
          code2 {o->precision(3);}
        }
        Fl_Box m_posterPagesWidthLabel {
          label pages
          xywh {520 180 70 25} align 20
        }
        Fl_Box m_posterPagesHeightLabel {
          label pages
          xywh {520 210 70 25} align 20
        }
      }
      Fl_Round_Button m_posterSizePercentualRadioButton {
        label {Image size in percent}
        callback {UpdatePosterSizeGroupsState();}
        xywh {325 252 275 20} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Group m_posterSizePercentualGroup {open
        xywh {325 270 275 45} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Value_Input m_posterPercentualSizeInput {
          label {Size:}
          callback {UpdatePosterSizeFields(m_posterPercentualSizeInput);}
          xywh {430 280 90 25}
          code0 {o->step(0.1);}
          code1 {o->range(0, 999);}
          code2 {o->precision(3);}
        }
        Fl_Box m_posterPercentualWidthLabel {
          label {%}
          xywh {520 280 70 25} align 20
        }
      }
      Fl_Box {} {
        xywh {315 410 295 0} resizable
      }
    }
    Fl_Group {} {open
      xywh {315 45 295 365} hide
    } {}
    Fl_Group m_savePosterStep {open
      xywh {315 45 295 365} hide
    } {}
  }
  Fl_Box m_previewPaintCanvas {
    xywh {10 45 300 365} box THIN_DOWN_BOX color 35 resizable
    class Fl_Paint_Canvas
  }
  Fl_Group {} {
    xywh {10 10 600 25}
  } {
    Fl_Box m_stepInfoBox {
      label {Step 1 of 8: Load an image}
      xywh {10 10 570 25} box THIN_UP_BOX color 10 labelfont 1 labelsize 15 labelcolor 32 resizable
    }
    Fl_Button {} {
      label {?}
      xywh {585 10 25 25} color 10 labelfont 1 labelsize 15
    }
  }
  decl {virtual void next(void) = 0;} {public
  }
  decl {virtual void prev(void) = 0;} {public
  }
  decl {virtual void UpdateNavigationButtons(void) = 0;} {public
  }
  decl {// ****** Load input image step:} {}
  decl {virtual void LoadInputImage(void) = 0;} {public
  }
  decl {// ****** Paper size step:} {}
  decl {virtual void SetPaperSizeFields(void) = 0;} {public
  }
  decl {virtual void HandlePaperSizeChangement(Fl_Widget* sourceWidget) = 0;} {public
  }
  decl {// ****** Overlapping step:} {}
  decl {virtual void SetOverlappingFields(void) = 0;} {public
  }
  decl {virtual void HandleOverlappingChangement(Fl_Widget* sourceWidget) = 0;} {public
  }
  decl {// ****** Poster size step:} {}
  decl {virtual void UpdatePosterSizeGroupsState(void) = 0;} {public
  }
  decl {virtual void UpdatePosterSizeFields(Fl_Valuator* sourceWidget) = 0;} {public
  }
} 
