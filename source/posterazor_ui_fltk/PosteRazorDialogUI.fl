# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cpp}
comment {/*
	PosteRazor - Make your own poster!
	Copyright (C) 2005-2007 by Alessandro Portale
	http://posterazor.sourceforge.net/

	This file is part of PosteRazor

	PosteRazor is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.
	
	PosteRazor is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with PosteRazor; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/} {in_source in_header
} 

decl {\#include "Fl_Paint_Canvas_Group.h"} {public
} 

decl {\#include "Fl_Image_Text_Button.h"} {public
} 

decl {\#include "Fl_PosteRazor_Spinner.h"} {public
} 

widget_class PosteRazorDialogUI {
  user_data this open
  xywh {400 103 620 455} type Double resizable
  code0 {size_range(this->w(), this->h());}
  class Fl_Double_Window visible
} {
  Fl_Group {} {open
    xywh {10 420 600 25}
  } {
    Fl_Box {} {
      xywh {295 420 15 25} resizable
    }
    Fl_Button m_settingsButton {
      label {Settings...}
      callback {openSettingsDialog();}
      xywh {10 420 220 25} labelcolor 32 align 16
      class Fl_Image_Text_Button
    }
    Fl_Box m_settingsButtonLabel {
      image {../posterazor_ui_common/images/settingsIcon.png} xywh {230 420 40 25} align 20 hide
    }
    Fl_Button m_prevButton {
      label {@-2<- Back}
      callback {prev();}
      xywh {380 420 110 25} labelcolor 32
    }
    Fl_Button m_nextButton {
      label {Next @-2->}
      callback {next();}
      xywh {500 420 110 25} labelcolor 32
    }
  }
  Fl_Wizard m_wizard {
    user_data this open
    xywh {315 45 295 365} box THIN_DOWN_BOX
  } {
    Fl_Group m_loadInputImageStep {open
      xywh {315 45 295 365} color 50 hide
    } {
      Fl_Group m_imageLoadGroup {
        label {Input Image} open
        xywh {325 69 275 25}
      } {
        Fl_Box m_inputFileNameLabel {
          xywh {325 69 250 25} box THIN_DOWN_BOX color 55 align 84 resizable
        }
        Fl_Button m_imageLoadButton {
          label {@+1fileopen}
          callback {loadInputImage(0);}
          xywh {575 69 25 25} labelcolor 134
        }
      }
      Fl_Group m_imageInfoGroup {
        label {Image information}
        xywh {325 120 275 85} box THIN_DOWN_BOX color 45
      } {
        Fl_Box m_imageInfoKeysLabel {
          xywh {325 130 135 65} align 25
        }
        Fl_Box m_imageInfoValuesLabel {
          xywh {460 130 135 65} align 21
        }
      }
      Fl_Box {} {
        xywh {315 410 295 0} resizable
      }
    }
    Fl_Group m_paperSizeStep {open
      xywh {315 45 295 365}
    } {
      Fl_Tabs m_paperFormatTypeTabs {
        label {Paper size}
        callback {handlePaperSizeChangement(m_paperFormatTypeTabs);} open
        xywh {325 70 275 140}
      } {
        Fl_Group m_paperFormatStandardGroup {
          label Standard open
          xywh {325 95 275 115} box THIN_UP_BOX selection_color 40 hide
        } {
          Fl_Choice m_paperFormatChoice {
            label {Format:} open
            xywh {425 105 165 25} down_box BORDER_BOX
          } {}
          Fl_Group m_paperOrientationGroup {
            label {Orientation:} open
            xywh {425 140 165 60} box THIN_DOWN_BOX color 43 align 4
          } {
            Fl_Round_Button m_paperOrientationPortraitRadioButton {
              label Portrait
              callback {handlePaperSizeChangement(m_paperOrientationPortraitRadioButton);}
              xywh {460 145 125 25} type Radio down_box ROUND_DOWN_BOX
            }
            Fl_Round_Button m_paperOrientationLandscapeRadioButton {
              label Landscape
              callback {handlePaperSizeChangement(m_paperOrientationLandscapeRadioButton);}
              xywh {460 170 125 25} type Radio down_box ROUND_DOWN_BOX
            }
          }
        }
        Fl_Group m_paperFormatCustomGroup {
          label Custom open
          xywh {325 95 275 115} box THIN_UP_BOX selection_color 40
        } {
          Fl_Group m_paperCustomWidthInput {
            label {Width:}
            callback {handlePaperSizeChangement(m_paperCustomWidthInput);}
            xywh {425 122 95 25} align 4 when 1
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_paperCustomWidthDimensionUnitLabel {
            label cm
            xywh {520 122 75 25} align 20
          }
          Fl_Group m_paperCustomHeightInput {
            label {Height:}
            callback {handlePaperSizeChangement(m_paperCustomHeightInput);}
            xywh {425 157 95 25} align 4 when 1
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_paperCustomHeightDimensionUnitLabel {
            label cm
            xywh {520 157 75 25} align 20
          }
        }
      }
      Fl_Group m_paperBordersGroup {
        label {Borders (cm)} open
        xywh {325 235 275 135} box THIN_DOWN_BOX color 43
      } {
        Fl_Group m_paperBorderTopInput {
          label Top
          callback {handlePaperSizeChangement(m_paperBorderTopInput);} selected
          xywh {422 260 80 25} when 1
          class Fl_PosteRazor_Spinner
        } {}
        Fl_Group m_paperBorderRightInput {
          label Right
          callback {handlePaperSizeChangement(m_paperBorderRightInput);} selected
          xywh {502 290 80 25} align 9 when 1
          class Fl_PosteRazor_Spinner
        } {}
        Fl_Group m_paperBorderBottomInput {
          label Bottom
          callback {handlePaperSizeChangement(m_paperBorderBottomInput);} selected
          xywh {422 320 80 25} align 2 when 1
          class Fl_PosteRazor_Spinner
        } {}
        Fl_Group m_paperBorderLeftInput {
          label Left
          callback {handlePaperSizeChangement(m_paperBorderLeftInput);} selected
          xywh {342 290 80 25} align 5 when 1
          class Fl_PosteRazor_Spinner
        } {}
      }
      Fl_Box {} {
        xywh {315 400 295 10} resizable
      }
    }
    Fl_Group m_overlappingStep {open
      xywh {315 45 295 365} hide
    } {
      Fl_Group m_overlappingSizeGroup {
        label {Overlapping size} open
        xywh {325 70 275 75} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Group m_overlappingWidthInput {
          label {Width:}
          callback {handleOverlappingChangement(m_overlappingWidthInput);}
          xywh {430 80 90 25} align 4 when 1
          class Fl_PosteRazor_Spinner
        } {}
        Fl_Box m_overlappingWidthDimensionUnitLabel {
          label cm
          xywh {520 80 75 25} align 20
        }
        Fl_Group m_overlappingHeightInput {
          label {Height:}
          callback {handleOverlappingChangement(m_overlappingHeightInput);}
          xywh {430 110 90 25} align 4 when 1
          class Fl_PosteRazor_Spinner
        } {}
        Fl_Box m_overlappingHeightDimensionUnitLabel {
          label cm
          xywh {520 110 75 25} align 20
        }
      }
      Fl_Box {} {
        xywh {315 410 290 0} resizable
      }
      Fl_Group m_overlappingPositionGroup {
        label {Overlapping position} open
        xywh {325 170 275 190} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Button m_overlappingPositionTopLeftButton {
          label {Top left}
          callback {handleOverlappingChangement(m_overlappingPositionTopLeftButton);}
          image {../posterazor_ui_common/images/overlappingTopLeft.png} xywh {335 180 120 80} type Radio color 47 selection_color 55 align 128
        }
        Fl_Button m_overlappingPositionTopRightButton {
          label {Top right}
          callback {handleOverlappingChangement(m_overlappingPositionTopRightButton);}
          image {../posterazor_ui_common/images/overlappingTopRight.png} xywh {470 180 120 80} type Radio color 47 selection_color 55 align 128
        }
        Fl_Button m_overlappingPositionBottomLeftButton {
          label {Bottom left}
          callback {handleOverlappingChangement(m_overlappingPositionBottomLeftButton);}
          image {../posterazor_ui_common/images/overlappingBottomLeft.png} xywh {335 270 120 80} type Radio color 47 selection_color 55 align 128
        }
        Fl_Button m_overlappingPositionBottomRightButton {
          label {Bottom right}
          callback {handleOverlappingChangement(m_overlappingPositionBottomRightButton);}
          image {../posterazor_ui_common/images/overlappingBottomRight.png} xywh {470 270 120 80} type Radio color 47 selection_color 55 align 128
        }
      }
    }
    Fl_Group m_posterSizeStep {open
      xywh {315 45 295 365} hide
    } {
      Fl_Group m_posterSizeGroup {
        label {Image size} open
        xywh {325 70 275 250} box THIN_DOWN_BOX color 45 selection_color 54
      } {
        Fl_Round_Button m_posterSizeAbsoluteRadioButton {
          label {Absolute image size}
          callback {updatePosterSizeGroupsState();}
          xywh {335 80 260 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Group m_posterSizeAbsoluteGroup {open
          xywh {335 105 260 55}
        } {
          Fl_Group m_posterAbsoluteWidthInput {
            label {Width:}
            callback {updatePosterSizeFields(m_posterAbsoluteWidthInput);}
            xywh {430 105 90 25} align 4 when 1
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_posterAbsoluteWidthDimensionUnitLabel {
            label cm
            xywh {520 105 70 25} align 20
          }
          Fl_Group m_posterAbsoluteHeightInput {
            label {Height:}
            callback {updatePosterSizeFields(m_posterAbsoluteHeightInput);}
            xywh {430 135 90 25} align 4 when 1
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_posterAbsoluteHeightDimensionUnitLabel {
            label cm
            xywh {520 135 70 25} align 20
          }
        }
        Fl_Round_Button m_posterSizeInPagesRadioButton {
          label {Size in pages}
          callback {updatePosterSizeGroupsState();}
          xywh {335 170 260 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Group m_posterSizeInPagesGroup {open
          xywh {335 195 260 55}
        } {
          Fl_Group m_posterPagesWidthInput {
            label {Width:}
            callback {updatePosterSizeFields(m_posterPagesWidthInput);}
            xywh {430 195 90 25} align 4 when 1
            code0 {o->setSpinnerVisible(true);}
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_posterPagesWidthLabel {
            label pages
            xywh {520 195 70 25} align 20
          }
          Fl_Group m_posterPagesHeightInput {
            label {Height:}
            callback {updatePosterSizeFields(m_posterPagesHeightInput);}
            xywh {430 225 90 25} align 4 when 1
            code0 {o->setSpinnerVisible(true);}
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_posterPagesHeightLabel {
            label pages
            xywh {520 225 70 25} align 20
          }
        }
        Fl_Round_Button m_posterSizePercentualRadioButton {
          label {Image size in percent}
          callback {updatePosterSizeGroupsState();}
          xywh {335 260 260 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Group m_posterSizePercentualGroup {open
          xywh {335 285 260 25}
        } {
          Fl_Group m_posterPercentualSizeInput {
            label {Size:}
            callback {updatePosterSizeFields(m_posterPercentualSizeInput);}
            xywh {430 285 90 25} align 4 when 1
            class Fl_PosteRazor_Spinner
          } {}
          Fl_Box m_posterPercentualWidthLabel {
            label {%}
            xywh {520 285 70 25} align 20
          }
        }
      }
      Fl_Group m_imageAlignmentGroup {
        label {Image alignment} open
        xywh {325 345 275 51} box THIN_DOWN_BOX color 45 selection_color 45
      } {
        Fl_Group {} {open
          xywh {335 355 113 31}
        } {
          Fl_Button m_posterAlignmentTopButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentTop.png} xywh {335 355 31 31} type Radio color 47 selection_color 55
          }
          Fl_Button m_posterAlignmentMiddleButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentMiddle.png} xywh {376 355 31 31} type Radio color 47 selection_color 55
          }
          Fl_Button m_posterAlignmentBottomButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentBottom.png} xywh {417 355 31 31} type Radio color 47 selection_color 55
          }
        }
        Fl_Group {} {open
          xywh {477 355 113 31}
        } {
          Fl_Button m_posterAlignmentLeftButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentLeft.png} xywh {477 355 31 31} type Radio color 47 selection_color 55
          }
          Fl_Button m_posterAlignmentCenterButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentCenter.png} xywh {518 355 31 31} type Radio color 47 selection_color 55
          }
          Fl_Button m_posterAlignmentRightButton {
            callback {handlePosterImageAlignment();}
            image {../posterazor_ui_common/images/alignmentRight.png} xywh {559 355 31 31} type Radio color 47 selection_color 55
          }
        }
      }
      Fl_Box {} {
        xywh {315 410 295 0} resizable
      }
    }
    Fl_Group m_savePosterStep {open
      xywh {315 45 295 365} hide
    } {
      Fl_Group m_savePosterGroup {
        label {Save the Poster} open
        xywh {325 70 275 85} box THIN_DOWN_BOX color 45
      } {
        Fl_Button {} {
          label {@+14filesave}
          callback {savePoster();}
          xywh {335 80 255 25} labelcolor 37
        }
        Fl_Check_Button m_setLaunchPDFApplicationCheckButton {
          label {Launch PDF application after saving}
          callback {setLaunchPDFApplication();}
          xywh {335 110 255 40} down_box DOWN_BOX align 148
        }
      }
      Fl_Box {} {
        xywh {315 410 295 0} resizable
      }
    }
  }
  Fl_Group m_paintCanvasGroup {open
    xywh {10 45 300 365} box FLAT_BOX color 45 labelcolor 30 resizable
    class Fl_Paint_Canvas_Group
  } {}
  Fl_Group {} {
    xywh {10 10 600 25}
  } {
    Fl_Box m_stepInfoBox {
      label {Step 1 of 8: Load an image}
      xywh {10 10 570 25} box THIN_UP_BOX color 10 labelfont 1 labelsize 15 labelcolor 32 align 20 resizable
    }
    Fl_Button {} {
      label {?}
      callback {openHelpDialog()}
      xywh {585 10 25 25} color 10 labelfont 1 labelsize 15 labelcolor 32
    }
  }
  decl {virtual void openSettingsDialog(void) = 0;} {public
  }
  decl {virtual void next(void) = 0;} {public
  }
  decl {virtual void prev(void) = 0;} {public
  }
  decl {virtual void updateNavigationButtons(void) = 0;} {public
  }
  decl {virtual void openHelpDialog(void) = 0;} {public
  }
  decl {// ****** Load input image step:} {}
  decl {virtual void loadInputImage(const char *fileName) = 0;} {public
  }
  decl {// ****** Paper size step:} {}
  decl {virtual void handlePaperSizeChangement(Fl_Widget* sourceWidget) = 0;} {public
  }
  decl {// ****** Overlapping step:} {}
  decl {virtual void handleOverlappingChangement(Fl_Widget* sourceWidget) = 0;} {public
  }
  decl {// ****** Poster size step:} {}
  decl {virtual void updatePosterSizeGroupsState(void) = 0;} {public
  }
  decl {virtual void updatePosterSizeFields(Fl_Widget* sourceWidget) = 0;} {public
  }
  decl {virtual void handlePosterImageAlignment(void) = 0;} {public
  }
  decl {// ****** Save poster step:} {}
  decl {virtual void savePoster(void) = 0;} {public
  }
  decl {virtual void setLaunchPDFApplication(void) = 0;} {public
  }
} 

widget_class PosteRazorHelpDialogUI {
  user_data this open
  xywh {236 419 500 400} type Double hide resizable
  code0 {size_range(300, 150);}
  class Fl_Double_Window
} {
  Fl_Help_View m_help_view {
    xywh {10 10 480 345} labelsize 8 resizable
    code0 {o->textsize(14);}
    code1 {o->textfont(FL_HELVETICA);}
  }
  Fl_Group {} {open
    xywh {10 365 480 25}
  } {
    Fl_Return_Button {} {
      label OK
      callback {hide();}
      xywh {405 365 85 25}
    }
    Fl_Button m_homepageButton {
      label Homepage
      callback {handleHomepageButtonClick();}
      xywh {10 365 185 25}
    }
    Fl_Box {} {
      xywh {333 365 10 25} labelsize 8 resizable
    }
  }
  Function {setHomepageButtonLabel(const char *label)} {open return_type void
  } {
    code {m_homepageButton->label(label);} {}
  }
  decl {virtual void jumpToAnchor(const char *anchor) = 0;} {public
  }
  decl {virtual void setHtmlContent(const char *content) = 0;} {public
  }
  decl {virtual void handleHomepageButtonClick(void) = 0;} {public
  }
  decl {virtual void updateLanguage(void) = 0;} {public
  }
} 

widget_class PosteRazorSettingsDialogUI {
  label {PosteRazor settings}
  user_data this open
  xywh {451 364 315 400} type Double
  code0 {m_okWasPressed = false;}
  class Fl_Double_Window modal visible
} {
  decl {bool m_okWasPressed;} {public
  }
  Fl_Group m_backgroudGroup {open
    xywh {10 10 295 345} box THIN_DOWN_BOX labelsize 8
  } {
    Fl_Group m_unitOfLengthGroup {
      label Units open
      xywh {20 35 275 85} box THIN_DOWN_BOX color 45
    } {
      Fl_Group m_unitOfLengthButtonsGroup {open
        xywh {30 45 255 25}
      } {}
      Fl_Box m_unitOfLengthExplanationBox {
        label {Choose the distance unit you want to work with}
        xywh {30 80 255 30} align 150
      }
    }
    Fl_Group m_useOpenGLGroup {
      label {Preview with OpenGL} open
      xywh {20 145 275 105} box THIN_DOWN_BOX color 45
    } {
      Fl_Check_Button m_useOpenGLCheckButton {
        label {use OpenGL}
        callback {handleUseOpenGLChangement();}
        xywh {30 154 255 20} down_box DOWN_BOX
      }
      Fl_Box m_useOpenGLExplanationBox {
        label {OpenGL enables a smooth preview on modern systems. It could slow the preview down on old systems, though.}
        xywh {30 179 255 60} align 150
      }
    }
    Fl_Group m_languageGroup {
      label Language open
      xywh {20 275 275 70} box THIN_DOWN_BOX color 45
    } {
      Fl_Group m_languageButtonsGroup {open
        xywh {30 285 255 25}
      } {}
      Fl_Box m_languageExplanationBox {
        label {Choose your language}
        xywh {30 315 255 20} align 150
      }
    }
  }
  Fl_Group m_confirmButtonsGroup {open
    xywh {10 365 296 25}
  } {
    Fl_Return_Button m_okButton {
      label OK
      callback {m_okWasPressed = true;
hide();}
      xywh {210 365 95 25}
    }
    Fl_Button m_cancelButton {
      label Cancel
      callback {hide();}
      xywh {105 365 95 25}
    }
    Fl_Box {} {
      xywh {10 365 10 25} labelsize 8 resizable
    }
  }
  decl {virtual void handleUseOpenGLChangement(void) = 0;} {public
  }
  Function {show_modal(void)} {open return_type bool
  } {
    code {m_okWasPressed = true;
show();
while(visible())
	Fl::wait();
return m_okWasPressed;} {}
  }
} 
